basePath: /
definitions:
  article.ArticleCreateDto:
    properties:
      body:
        type: string
      date:
        example: "2022-04-23T00:00:00Z"
        type: string
      tags:
        items:
          $ref: '#/definitions/article.TagDto'
        type: array
      title:
        type: string
    type: object
  article.ArticleResponseDto:
    properties:
      body:
        type: string
      createdAt:
        type: string
      date:
        type: string
      id:
        type: integer
      tags:
        items:
          $ref: '#/definitions/tag.Tag'
        type: array
      title:
        type: string
      updatedAt:
        type: string
    type: object
  article.TagDto:
    properties:
      id:
        type: integer
    type: object
  tag.Tag:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        maxLength: 10
        minLength: 3
        type: string
      updatedAt:
        type: string
    required:
    - name
    type: object
  tag.TagCreateDto:
    properties:
      name:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: nadun1indunil@gmail.com
    name: Nadun Indunil
    url: https://www.linkedin.com/in/nadunindunil/
  description: This is a sample api.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Article API
  version: "1.0"
paths:
  /articles:
    get:
      operationId: get-all-articles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.ArticleResponseDto'
      summary: get all articles
      tags:
      - articles
    post:
      operationId: create-article
      parameters:
      - description: article data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/article.ArticleCreateDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: add a new article
      tags:
      - articles
  /articles/{id}:
    get:
      operationId: get-article
      parameters:
      - description: article ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/article.ArticleResponseDto'
        "404":
          description: Not Found
          schema:
            type: string
      summary: get an article
      tags:
      - articles
  /tags:
    get:
      operationId: get-all-tags
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tag.Tag'
      summary: get all tags
      tags:
      - tags
    post:
      operationId: create-tag
      parameters:
      - description: tag data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tag.TagCreateDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tag.Tag'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: add a new tag
      tags:
      - tags
  /tags/{name}/{date}:
    get:
      operationId: get-tags-by-name-and-date
      parameters:
      - description: tag name
        in: path
        name: name
        required: true
        type: string
      - description: date
        in: path
        name: date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tag.Tag'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: get tags by name and date
      tags:
      - tags
swagger: "2.0"
